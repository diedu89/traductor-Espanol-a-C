Warning : *** Shift/Reduce conflict found in state #23
  between NT$2 ::= (*) 
  and     VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER 
  and     VARIABLE ::= (*) IDENTIFICADOR 
  and     VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER 
  under symbol IDENTIFICADOR
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #23
  between NT$2 ::= (*) 
  and     EXP_PRIMARIA ::= (*) CADENA 
  under symbol CADENA
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #23
  between NT$2 ::= (*) 
  and     CONSTANTE_NUM ::= (*) ENTERO 
  under symbol ENTERO
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #23
  between NT$2 ::= (*) 
  and     CONSTANTE_NUM ::= (*) FLOTANTE 
  under symbol FLOTANTE
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #23
  between NT$2 ::= (*) 
  and     EXP_PRIMARIA ::= (*) BOOLEANO 
  under symbol BOOLEANO
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #23
  between NT$2 ::= (*) 
  and     EXP_PRIMARIA ::= (*) CARACTER 
  under symbol CARACTER
  Resolved in favor of shifting.

Warning : *** Shift/Reduce conflict found in state #23
  between NT$2 ::= (*) 
  and     EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER 
  under symbol PAR_IZQ
  Resolved in favor of shifting.

Warning : *** Production "NT$2 ::= " never reduced
Error : *** More conflicts encountered than expected -- parser generation aborted
===== Viable Prefix Recognizer =====
START lalr_state [0]: {
  [PROGRAMA ::= (*) PROGRAMA_K IDENTIFICADOR BLOQUE MODULO , {EOF }]
  [PROGRAMA ::= (*) PROGRAMA_K IDENTIFICADOR BLOQUE , {EOF }]
  [$START ::= (*) PROGRAMA EOF , {EOF }]
}
transition on PROGRAMA to state [2]
transition on PROGRAMA_K to state [1]

-------------------
lalr_state [1]: {
  [PROGRAMA ::= PROGRAMA_K (*) IDENTIFICADOR BLOQUE MODULO , {EOF }]
  [PROGRAMA ::= PROGRAMA_K (*) IDENTIFICADOR BLOQUE , {EOF }]
}
transition on IDENTIFICADOR to state [4]

-------------------
lalr_state [2]: {
  [$START ::= PROGRAMA (*) EOF , {EOF }]
}
transition on EOF to state [3]

-------------------
lalr_state [3]: {
  [$START ::= PROGRAMA EOF (*) , {EOF }]
}

-------------------
lalr_state [4]: {
  [PROGRAMA ::= PROGRAMA_K IDENTIFICADOR (*) BLOQUE MODULO , {EOF }]
  [BLOQUE ::= (*) COMENTARIO BLOQUE , {EOF MODULO_K }]
  [PROGRAMA ::= PROGRAMA_K IDENTIFICADOR (*) BLOQUE , {EOF }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {EOF INICIO_BLOQUE INICIO_COMENTARIO MODULO_K }]
  [BLOQUE ::= (*) INICIO_BLOQUE NT$0 INSTRUCCIONES NT$1 FIN_BLOQUE , {EOF MODULO_K }]
  [BLOQUE ::= (*) COMENTARIO , {EOF MODULO_K }]
}
transition on INICIO_BLOQUE to state [8]
transition on INICIO_COMENTARIO to state [7]
transition on BLOQUE to state [6]
transition on COMENTARIO to state [5]

-------------------
lalr_state [5]: {
  [BLOQUE ::= COMENTARIO (*) BLOQUE , {EOF MODULO_K }]
  [BLOQUE ::= (*) COMENTARIO BLOQUE , {EOF MODULO_K }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {EOF INICIO_BLOQUE INICIO_COMENTARIO MODULO_K }]
  [BLOQUE ::= (*) INICIO_BLOQUE NT$0 INSTRUCCIONES NT$1 FIN_BLOQUE , {EOF MODULO_K }]
  [BLOQUE ::= COMENTARIO (*) , {EOF MODULO_K }]
  [BLOQUE ::= (*) COMENTARIO , {EOF MODULO_K }]
}
transition on INICIO_BLOQUE to state [8]
transition on INICIO_COMENTARIO to state [7]
transition on BLOQUE to state [144]
transition on COMENTARIO to state [5]

-------------------
lalr_state [6]: {
  [PROGRAMA ::= PROGRAMA_K IDENTIFICADOR BLOQUE (*) , {EOF }]
  [MODULO ::= (*) MODULO_K IDENTIFICADOR RECIBE ARGUMENTOS DEVUELVE TIPO BLOQUE , {EOF }]
  [PROGRAMA ::= PROGRAMA_K IDENTIFICADOR BLOQUE (*) MODULO , {EOF }]
}
transition on MODULO_K to state [130]
transition on MODULO to state [129]

-------------------
lalr_state [7]: {
  [COMENTARIO ::= INICIO_COMENTARIO (*) CONT_COMENT FIN_COMENTARIO , {EOF IDENTIFICADOR INICIO_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR MODULO_K SI DESDE MIENTRAS }]
}
transition on CONT_COMENT to state [127]

-------------------
lalr_state [8]: {
  [NT$0 ::= (*) , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [BLOQUE ::= INICIO_BLOQUE (*) NT$0 INSTRUCCIONES NT$1 FIN_BLOQUE , {EOF MODULO_K }]
}
transition on NT$0 to state [9]

-------------------
lalr_state [9]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [BLOQUE ::= INICIO_BLOQUE NT$0 (*) INSTRUCCIONES NT$1 FIN_BLOQUE , {EOF MODULO_K }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCIONES INSTRUCCION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on INSTRUCCIONES to state [15]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [10]

-------------------
lalr_state [10]: {
  [INSTRUCCIONES ::= INSTRUCCION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [11]: {
  [INSTRUCCION ::= IFELSE (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [12]: {
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLES ::= (*) VARIABLES COMA EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [LECTURA ::= LEER (*) VARIABLES , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLES ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on VARIABLE to state [124]
transition on VARIABLES to state [123]
transition on IDENTIFICADOR to state [24]

-------------------
lalr_state [13]: {
  [INSTRUCCION ::= DECLARACION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [14]: {
  [INSTRUCCION ::= LECTURA (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [15]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [NT$1 ::= (*) , {FIN_BLOQUE }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [BLOQUE ::= INICIO_BLOQUE NT$0 INSTRUCCIONES (*) NT$1 FIN_BLOQUE , {EOF MODULO_K }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCIONES ::= INSTRUCCIONES (*) INSTRUCCION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on NT$1 to state [121]
transition on DESPLEGAR to state [16]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [46]

-------------------
lalr_state [16]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [DESPLIEGUE ::= DESPLEGAR (*) EXPRESIONES , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) CONDICIONAL_Y AND EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) EXPRESION OR CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESIONES ::= (*) EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESIONES ::= (*) EXPRESIONES COMA EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXPRESION ::= (*) CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXPRESION to state [118]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on CONDICIONAL_Y to state [37]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on EXPRESIONES to state [117]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [30]
transition on CADENA to state [29]

-------------------
lalr_state [17]: {
  [ASIGNACION ::= VARIABLE (*) OP_IGUAL EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on OP_IGUAL to state [115]

-------------------
lalr_state [18]: {
  [IDENTIFICADORES ::= (*) IDENTIFICADOR , {TIPO COMA }]
  [DECLARACION ::= DECLARAR (*) VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= DECLARAR (*) IDENTIFICADORES TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [IDENTIFICADORES ::= (*) IDENTIFICADORES COMA IDENTIFICADOR , {TIPO COMA }]
  [DECLARACION ::= DECLARAR (*) MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on MATRIZ to state [99]
transition on IDENTIFICADORES to state [98]
transition on IDENTIFICADOR to state [97]
transition on VECTOR to state [96]

-------------------
lalr_state [19]: {
  [INSTRUCCION ::= IF (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [20]: {
  [INSTRUCCION ::= MIENTRAS_T (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [21]: {
  [INSTRUCCION ::= DESPLIEGUE (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [22]: {
  [INSTRUCCION ::= ASIGNACION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [23]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [IF ::= SI (*) NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) CONDICIONAL_Y AND EXP_IGUALDAD , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) EXPRESION OR CONDICIONAL_Y , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [IFELSE ::= SI (*) EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [NT$2 ::= (*) , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) EXP_IGUALDAD , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) CONDICIONAL_Y , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXPRESION to state [88]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on CONDICIONAL_Y to state [37]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on NT$2 to state [87]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [30]
transition on CADENA to state [29]

-------------------
lalr_state [24]: {
  [VARIABLE ::= IDENTIFICADOR (*) CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= IDENTIFICADOR (*) CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= IDENTIFICADOR (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on CORCHETE_IZQ to state [81]

-------------------
lalr_state [25]: {
  [FOR ::= DESDE (*) IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on IDENTIFICADOR to state [74]

-------------------
lalr_state [26]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= COMENTARIO (*) INSTRUCCION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [73]

-------------------
lalr_state [27]: {
  [INSTRUCCION ::= FOR (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [28]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) CONDICIONAL_Y AND EXP_IGUALDAD , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) EXPRESION OR CONDICIONAL_Y , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [MIENTRAS_T ::= MIENTRAS (*) EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) EXP_IGUALDAD , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) CONDICIONAL_Y , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXPRESION to state [42]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on CONDICIONAL_Y to state [37]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [30]
transition on CADENA to state [29]

-------------------
lalr_state [29]: {
  [EXP_PRIMARIA ::= CADENA (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [30]: {
  [EXP_IGUALDAD ::= EXP_IGUALDAD (*) COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_IGUALDAD ::= EXP_IGUALDAD (*) OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [CONDICIONAL_Y ::= EXP_IGUALDAD (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR AND }]
}
transition on OP_IGUAL to state [52]
transition on COMP_DIFERENTE to state [51]

-------------------
lalr_state [31]: {
  [EXP_PRIMARIA ::= BOOLEANO (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [32]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) CONDICIONAL_Y AND EXP_IGUALDAD , {PAR_DER OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) EXPRESION OR CONDICIONAL_Y , {PAR_DER OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= PAR_IZQ (*) EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) EXP_IGUALDAD , {PAR_DER OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) CONDICIONAL_Y , {PAR_DER OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXPRESION to state [71]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on CONDICIONAL_Y to state [37]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [30]
transition on CADENA to state [29]

-------------------
lalr_state [33]: {
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= EXP_RELACIONAL (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on COMP_MAYOR to state [57]
transition on COMP_MAYOR_IGUAL to state [56]
transition on COMP_MENOR_IGUAL to state [55]
transition on COMP_MENOR to state [54]

-------------------
lalr_state [34]: {
  [CONSTANTE_NUM ::= ENTERO (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [35]: {
  [EXP_PRIMARIA ::= CONSTANTE_NUM (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [36]: {
  [CONSTANTE_NUM ::= FLOTANTE (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [37]: {
  [CONDICIONAL_Y ::= CONDICIONAL_Y (*) AND EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR AND }]
  [EXPRESION ::= CONDICIONAL_Y (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR }]
}
transition on AND to state [49]

-------------------
lalr_state [38]: {
  [EXP_PRIMARIA ::= VARIABLE (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [39]: {
  [EXP_MUL ::= EXP_MUL (*) OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [OP_MUL ::= (*) OP_DIV , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
  [OP_MUL ::= (*) OP_POR , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
  [EXP_ADICION ::= EXP_MUL (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on OP_POR to state [65]
transition on OP_DIV to state [64]
transition on OP_MUL to state [63]

-------------------
lalr_state [40]: {
  [EXP_MUL ::= EXP_PRIMARIA (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [41]: {
  [OP_ADICION ::= (*) OP_MAS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
  [EXP_RELACIONAL ::= EXP_ADICION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= EXP_ADICION (*) OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [OP_ADICION ::= (*) OP_MENOS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}
transition on OP_MAS to state [61]
transition on OP_MENOS to state [60]
transition on OP_ADICION to state [59]

-------------------
lalr_state [42]: {
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [EXPRESION ::= EXPRESION (*) OR CONDICIONAL_Y , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [MIENTRAS_T ::= MIENTRAS EXPRESION (*) INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCIONES INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on INSTRUCCIONES to state [45]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on OR to state [44]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [10]

-------------------
lalr_state [43]: {
  [EXP_PRIMARIA ::= CARACTER (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [44]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) CONDICIONAL_Y AND EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= EXPRESION OR (*) CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on CONDICIONAL_Y to state [48]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [30]
transition on CADENA to state [29]

-------------------
lalr_state [45]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [MIENTRAS_T ::= MIENTRAS EXPRESION INSTRUCCIONES (*) FIN_MIENTRAS , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCIONES ::= INSTRUCCIONES (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on FIN_MIENTRAS to state [47]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [46]

-------------------
lalr_state [46]: {
  [INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [47]: {
  [MIENTRAS_T ::= MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [48]: {
  [CONDICIONAL_Y ::= CONDICIONAL_Y (*) AND EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR AND }]
  [EXPRESION ::= EXPRESION OR CONDICIONAL_Y (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR }]
}
transition on AND to state [49]

-------------------
lalr_state [49]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= CONDICIONAL_Y AND (*) EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [50]
transition on CADENA to state [29]

-------------------
lalr_state [50]: {
  [EXP_IGUALDAD ::= EXP_IGUALDAD (*) COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_IGUALDAD ::= EXP_IGUALDAD (*) OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [CONDICIONAL_Y ::= CONDICIONAL_Y AND EXP_IGUALDAD (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS PAR_DER OR AND }]
}
transition on OP_IGUAL to state [52]
transition on COMP_DIFERENTE to state [51]

-------------------
lalr_state [51]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= EXP_IGUALDAD COMP_DIFERENTE (*) EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [70]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on CADENA to state [29]

-------------------
lalr_state [52]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= EXP_IGUALDAD OP_IGUAL (*) EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [53]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on CADENA to state [29]

-------------------
lalr_state [53]: {
  [EXP_IGUALDAD ::= EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on COMP_MAYOR to state [57]
transition on COMP_MAYOR_IGUAL to state [56]
transition on COMP_MENOR_IGUAL to state [55]
transition on COMP_MENOR to state [54]

-------------------
lalr_state [54]: {
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL COMP_MENOR (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_ADICION to state [69]
transition on EXP_PRIMARIA to state [40]
transition on VARIABLE to state [38]
transition on EXP_MUL to state [39]
transition on FLOTANTE to state [36]
transition on ENTERO to state [34]
transition on CONSTANTE_NUM to state [35]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on CADENA to state [29]

-------------------
lalr_state [55]: {
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL COMP_MENOR_IGUAL (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_ADICION to state [68]
transition on EXP_PRIMARIA to state [40]
transition on VARIABLE to state [38]
transition on EXP_MUL to state [39]
transition on FLOTANTE to state [36]
transition on ENTERO to state [34]
transition on CONSTANTE_NUM to state [35]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on CADENA to state [29]

-------------------
lalr_state [56]: {
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL COMP_MAYOR_IGUAL (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_ADICION to state [67]
transition on EXP_PRIMARIA to state [40]
transition on VARIABLE to state [38]
transition on EXP_MUL to state [39]
transition on FLOTANTE to state [36]
transition on ENTERO to state [34]
transition on CONSTANTE_NUM to state [35]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on CADENA to state [29]

-------------------
lalr_state [57]: {
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL COMP_MAYOR (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_ADICION to state [58]
transition on EXP_PRIMARIA to state [40]
transition on VARIABLE to state [38]
transition on EXP_MUL to state [39]
transition on FLOTANTE to state [36]
transition on ENTERO to state [34]
transition on CONSTANTE_NUM to state [35]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on CADENA to state [29]

-------------------
lalr_state [58]: {
  [EXP_RELACIONAL ::= EXP_RELACIONAL COMP_MAYOR EXP_ADICION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [OP_ADICION ::= (*) OP_MAS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
  [EXP_ADICION ::= EXP_ADICION (*) OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [OP_ADICION ::= (*) OP_MENOS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}
transition on OP_MAS to state [61]
transition on OP_MENOS to state [60]
transition on OP_ADICION to state [59]

-------------------
lalr_state [59]: {
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= EXP_ADICION OP_ADICION (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [62]
transition on VARIABLE to state [38]
transition on FLOTANTE to state [36]
transition on ENTERO to state [34]
transition on CONSTANTE_NUM to state [35]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on CADENA to state [29]

-------------------
lalr_state [60]: {
  [OP_ADICION ::= OP_MENOS (*) , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}

-------------------
lalr_state [61]: {
  [OP_ADICION ::= OP_MAS (*) , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}

-------------------
lalr_state [62]: {
  [EXP_MUL ::= EXP_MUL (*) OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= EXP_ADICION OP_ADICION EXP_MUL (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [OP_MUL ::= (*) OP_DIV , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
  [OP_MUL ::= (*) OP_POR , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}
transition on OP_POR to state [65]
transition on OP_DIV to state [64]
transition on OP_MUL to state [63]

-------------------
lalr_state [63]: {
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= EXP_MUL OP_MUL (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXP_PRIMARIA to state [66]
transition on VARIABLE to state [38]
transition on FLOTANTE to state [36]
transition on ENTERO to state [34]
transition on CONSTANTE_NUM to state [35]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on CADENA to state [29]

-------------------
lalr_state [64]: {
  [OP_MUL ::= OP_DIV (*) , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}

-------------------
lalr_state [65]: {
  [OP_MUL ::= OP_POR (*) , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}

-------------------
lalr_state [66]: {
  [EXP_MUL ::= EXP_MUL OP_MUL EXP_PRIMARIA (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [67]: {
  [OP_ADICION ::= (*) OP_MAS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= EXP_ADICION (*) OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [OP_ADICION ::= (*) OP_MENOS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}
transition on OP_MAS to state [61]
transition on OP_MENOS to state [60]
transition on OP_ADICION to state [59]

-------------------
lalr_state [68]: {
  [OP_ADICION ::= (*) OP_MAS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
  [EXP_ADICION ::= EXP_ADICION (*) OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [OP_ADICION ::= (*) OP_MENOS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}
transition on OP_MAS to state [61]
transition on OP_MENOS to state [60]
transition on OP_ADICION to state [59]

-------------------
lalr_state [69]: {
  [OP_ADICION ::= (*) OP_MAS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
  [EXP_ADICION ::= EXP_ADICION (*) OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL COMP_MENOR EXP_ADICION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [OP_ADICION ::= (*) OP_MENOS , {IDENTIFICADOR CADENA ENTERO FLOTANTE BOOLEANO CARACTER PAR_IZQ }]
}
transition on OP_MAS to state [61]
transition on OP_MENOS to state [60]
transition on OP_ADICION to state [59]

-------------------
lalr_state [70]: {
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= EXP_RELACIONAL (*) COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on COMP_MAYOR to state [57]
transition on COMP_MAYOR_IGUAL to state [56]
transition on COMP_MENOR_IGUAL to state [55]
transition on COMP_MENOR to state [54]

-------------------
lalr_state [71]: {
  [EXP_PRIMARIA ::= PAR_IZQ EXPRESION (*) PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= EXPRESION (*) OR CONDICIONAL_Y , {PAR_DER OR }]
}
transition on OR to state [44]
transition on PAR_DER to state [72]

-------------------
lalr_state [72]: {
  [EXP_PRIMARIA ::= PAR_IZQ EXPRESION PAR_DER (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [73]: {
  [INSTRUCCION ::= COMENTARIO INSTRUCCION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [74]: {
  [FOR ::= DESDE IDENTIFICADOR (*) OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on OP_IGUAL to state [75]

-------------------
lalr_state [75]: {
  [FOR ::= DESDE IDENTIFICADOR OP_IGUAL (*) ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on ENTERO to state [76]

-------------------
lalr_state [76]: {
  [FOR ::= DESDE IDENTIFICADOR OP_IGUAL ENTERO (*) HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on HASTA to state [77]

-------------------
lalr_state [77]: {
  [FOR ::= DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA (*) ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on ENTERO to state [78]

-------------------
lalr_state [78]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [FOR ::= DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO (*) INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCIONES INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on INSTRUCCIONES to state [79]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [10]

-------------------
lalr_state [79]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [FOR ::= DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES (*) FIN_DESDE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCIONES ::= INSTRUCCIONES (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE FIN_DESDE MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [46]
transition on FIN_DESDE to state [80]

-------------------
lalr_state [80]: {
  [FOR ::= DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [81]: {
  [VARIABLE ::= IDENTIFICADOR CORCHETE_IZQ (*) ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= IDENTIFICADOR CORCHETE_IZQ (*) ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on ENTERO to state [82]

-------------------
lalr_state [82]: {
  [VARIABLE ::= IDENTIFICADOR CORCHETE_IZQ ENTERO (*) CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= IDENTIFICADOR CORCHETE_IZQ ENTERO (*) COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on CORCHETE_DER to state [84]
transition on COMA to state [83]

-------------------
lalr_state [83]: {
  [VARIABLE ::= IDENTIFICADOR CORCHETE_IZQ ENTERO COMA (*) ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on ENTERO to state [85]

-------------------
lalr_state [84]: {
  [VARIABLE ::= IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [85]: {
  [VARIABLE ::= IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO (*) CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on CORCHETE_DER to state [86]

-------------------
lalr_state [86]: {
  [VARIABLE ::= IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV PAR_DER COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}

-------------------
lalr_state [87]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [IF ::= SI NT$2 (*) EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) CONDICIONAL_Y AND EXP_IGUALDAD , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) EXPRESION OR CONDICIONAL_Y , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) EXP_IGUALDAD , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) CONDICIONAL_Y , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXPRESION to state [93]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on CONDICIONAL_Y to state [37]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [30]
transition on CADENA to state [29]

-------------------
lalr_state [88]: {
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [EXPRESION ::= EXPRESION (*) OR CONDICIONAL_Y , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR }]
  [IFELSE ::= SI EXPRESION (*) INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCIONES INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on INSTRUCCIONES to state [89]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on OR to state [44]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [10]

-------------------
lalr_state [89]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [IFELSE ::= SI EXPRESION INSTRUCCIONES (*) SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCIONES ::= INSTRUCCIONES (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO DESDE MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on SINO to state [90]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [46]

-------------------
lalr_state [90]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [IFELSE ::= SI EXPRESION INSTRUCCIONES SINO (*) INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCIONES INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on INSTRUCCIONES to state [91]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [10]

-------------------
lalr_state [91]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [IFELSE ::= SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES (*) FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCIONES ::= INSTRUCCIONES (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on FIN_SI to state [92]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [46]

-------------------
lalr_state [92]: {
  [IFELSE ::= SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [93]: {
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [EXPRESION ::= EXPRESION (*) OR CONDICIONAL_Y , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS OR }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCIONES ::= (*) INSTRUCCIONES INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [IF ::= SI NT$2 EXPRESION (*) INSTRUCCIONES FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on LECTURA to state [14]
transition on INSTRUCCIONES to state [94]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on OR to state [44]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [10]

-------------------
lalr_state [94]: {
  [INSTRUCCION ::= (*) IFELSE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [IF ::= (*) SI NT$2 EXPRESION INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DESPLIEGUE ::= (*) DESPLEGAR EXPRESIONES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DECLARACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) ASIGNACION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [LECTURA ::= (*) LEER VARIABLES , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) LECTURA , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR IDENTIFICADORES TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR , {OP_IGUAL }]
  [IFELSE ::= (*) SI EXPRESION INSTRUCCIONES SINO INSTRUCCIONES FIN_SI , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) FOR , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI DESDE MIENTRAS }]
  [ASIGNACION ::= (*) VARIABLE OP_IGUAL EXPRESION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) IF , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) DESPLIEGUE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [MIENTRAS_T ::= (*) MIENTRAS EXPRESION INSTRUCCIONES FIN_MIENTRAS , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [DECLARACION ::= (*) DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {OP_IGUAL }]
  [INSTRUCCION ::= (*) COMENTARIO INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [FOR ::= (*) DESDE IDENTIFICADOR OP_IGUAL ENTERO HASTA ENTERO INSTRUCCIONES FIN_DESDE , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCIONES ::= INSTRUCCIONES (*) INSTRUCCION , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [INSTRUCCION ::= (*) MIENTRAS_T , {IDENTIFICADOR INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI FIN_SI DESDE MIENTRAS }]
  [IF ::= SI NT$2 EXPRESION INSTRUCCIONES (*) FIN_SI , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on MIENTRAS to state [28]
transition on FOR to state [27]
transition on COMENTARIO to state [26]
transition on FIN_SI to state [95]
transition on DESDE to state [25]
transition on IDENTIFICADOR to state [24]
transition on SI to state [23]
transition on ASIGNACION to state [22]
transition on DESPLIEGUE to state [21]
transition on MIENTRAS_T to state [20]
transition on IF to state [19]
transition on DECLARAR to state [18]
transition on VARIABLE to state [17]
transition on DESPLEGAR to state [16]
transition on LECTURA to state [14]
transition on DECLARACION to state [13]
transition on LEER to state [12]
transition on INICIO_COMENTARIO to state [7]
transition on IFELSE to state [11]
transition on INSTRUCCION to state [46]

-------------------
lalr_state [95]: {
  [IF ::= SI NT$2 EXPRESION INSTRUCCIONES FIN_SI (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [96]: {
  [DECLARACION ::= DECLARAR VECTOR (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on IDENTIFICADOR to state [110]

-------------------
lalr_state [97]: {
  [IDENTIFICADORES ::= IDENTIFICADOR (*) , {TIPO COMA }]
}

-------------------
lalr_state [98]: {
  [DECLARACION ::= DECLARAR IDENTIFICADORES (*) TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [IDENTIFICADORES ::= IDENTIFICADORES (*) COMA IDENTIFICADOR , {TIPO COMA }]
}
transition on TIPO to state [108]
transition on COMA to state [107]

-------------------
lalr_state [99]: {
  [DECLARACION ::= DECLARAR MATRIZ (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on IDENTIFICADOR to state [100]

-------------------
lalr_state [100]: {
  [DECLARACION ::= DECLARAR MATRIZ IDENTIFICADOR (*) CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on CORCHETE_IZQ to state [101]

-------------------
lalr_state [101]: {
  [DECLARACION ::= DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ (*) ENTERO COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on ENTERO to state [102]

-------------------
lalr_state [102]: {
  [DECLARACION ::= DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO (*) COMA ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on COMA to state [103]

-------------------
lalr_state [103]: {
  [DECLARACION ::= DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA (*) ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on ENTERO to state [104]

-------------------
lalr_state [104]: {
  [DECLARACION ::= DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO (*) CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on CORCHETE_DER to state [105]

-------------------
lalr_state [105]: {
  [DECLARACION ::= DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER (*) TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on TIPO to state [106]

-------------------
lalr_state [106]: {
  [DECLARACION ::= DECLARAR MATRIZ IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER TIPO (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [107]: {
  [IDENTIFICADORES ::= IDENTIFICADORES COMA (*) IDENTIFICADOR , {TIPO COMA }]
}
transition on IDENTIFICADOR to state [109]

-------------------
lalr_state [108]: {
  [DECLARACION ::= DECLARAR IDENTIFICADORES TIPO (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [109]: {
  [IDENTIFICADORES ::= IDENTIFICADORES COMA IDENTIFICADOR (*) , {TIPO COMA }]
}

-------------------
lalr_state [110]: {
  [DECLARACION ::= DECLARAR VECTOR IDENTIFICADOR (*) CORCHETE_IZQ ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on CORCHETE_IZQ to state [111]

-------------------
lalr_state [111]: {
  [DECLARACION ::= DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ (*) ENTERO CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on ENTERO to state [112]

-------------------
lalr_state [112]: {
  [DECLARACION ::= DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO (*) CORCHETE_DER TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on CORCHETE_DER to state [113]

-------------------
lalr_state [113]: {
  [DECLARACION ::= DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER (*) TIPO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on TIPO to state [114]

-------------------
lalr_state [114]: {
  [DECLARACION ::= DECLARAR VECTOR IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER TIPO (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [115]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) CONDICIONAL_Y AND EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) EXPRESION OR CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [ASIGNACION ::= VARIABLE OP_IGUAL (*) EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXPRESION to state [116]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on CONDICIONAL_Y to state [37]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [30]
transition on CADENA to state [29]

-------------------
lalr_state [116]: {
  [ASIGNACION ::= VARIABLE OP_IGUAL EXPRESION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXPRESION ::= EXPRESION (*) OR CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
}
transition on OR to state [44]

-------------------
lalr_state [117]: {
  [DESPLIEGUE ::= DESPLEGAR EXPRESIONES (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXPRESIONES ::= EXPRESIONES (*) COMA EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on COMA to state [119]

-------------------
lalr_state [118]: {
  [EXPRESIONES ::= EXPRESION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXPRESION ::= EXPRESION (*) OR CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
}
transition on OR to state [44]

-------------------
lalr_state [119]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) CONDICIONAL_Y AND EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) EXPRESION OR CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESIONES ::= EXPRESIONES COMA (*) EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXPRESION ::= (*) CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXPRESION to state [120]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on CONDICIONAL_Y to state [37]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [30]
transition on CADENA to state [29]

-------------------
lalr_state [120]: {
  [EXPRESIONES ::= EXPRESIONES COMA EXPRESION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXPRESION ::= EXPRESION (*) OR CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
}
transition on OR to state [44]

-------------------
lalr_state [121]: {
  [BLOQUE ::= INICIO_BLOQUE NT$0 INSTRUCCIONES NT$1 (*) FIN_BLOQUE , {EOF MODULO_K }]
}
transition on FIN_BLOQUE to state [122]

-------------------
lalr_state [122]: {
  [BLOQUE ::= INICIO_BLOQUE NT$0 INSTRUCCIONES NT$1 FIN_BLOQUE (*) , {EOF MODULO_K }]
}

-------------------
lalr_state [123]: {
  [VARIABLES ::= VARIABLES (*) COMA EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [LECTURA ::= LEER VARIABLES (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}
transition on COMA to state [125]

-------------------
lalr_state [124]: {
  [VARIABLES ::= VARIABLE (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
}

-------------------
lalr_state [125]: {
  [EXP_PRIMARIA ::= (*) CONSTANTE_NUM , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) BOOLEANO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONSTANTE_NUM ::= (*) FLOTANTE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) CONDICIONAL_Y AND EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_ADICION OP_ADICION EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CADENA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO COMA ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) EXPRESION OR CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD COMP_DIFERENTE EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) PAR_IZQ EXPRESION PAR_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_IGUALDAD ::= (*) EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) CARACTER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLES ::= VARIABLES COMA (*) EXPRESION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [CONSTANTE_NUM ::= (*) ENTERO , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [CONDICIONAL_Y ::= (*) EXP_IGUALDAD , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MENOR EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_ADICION ::= (*) EXP_MUL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_MUL ::= (*) EXP_MUL OP_MUL EXP_PRIMARIA , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXP_PRIMARIA ::= (*) VARIABLE , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [VARIABLE ::= (*) IDENTIFICADOR CORCHETE_IZQ ENTERO CORCHETE_DER , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL OP_MAS OP_MENOS OP_POR OP_DIV COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
  [EXPRESION ::= (*) CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
  [EXP_IGUALDAD ::= (*) EXP_IGUALDAD OP_IGUAL EXP_RELACIONAL , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE OR AND }]
  [EXP_RELACIONAL ::= (*) EXP_RELACIONAL COMP_MAYOR_IGUAL EXP_ADICION , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OP_IGUAL COMP_DIFERENTE COMP_MAYOR COMP_MENOR COMP_MAYOR_IGUAL COMP_MENOR_IGUAL OR AND }]
}
transition on IDENTIFICADOR to state [24]
transition on CARACTER to state [43]
transition on EXPRESION to state [126]
transition on EXP_ADICION to state [41]
transition on EXP_PRIMARIA to state [40]
transition on EXP_MUL to state [39]
transition on VARIABLE to state [38]
transition on CONDICIONAL_Y to state [37]
transition on FLOTANTE to state [36]
transition on CONSTANTE_NUM to state [35]
transition on ENTERO to state [34]
transition on EXP_RELACIONAL to state [33]
transition on PAR_IZQ to state [32]
transition on BOOLEANO to state [31]
transition on EXP_IGUALDAD to state [30]
transition on CADENA to state [29]

-------------------
lalr_state [126]: {
  [VARIABLES ::= VARIABLES COMA EXPRESION (*) , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS }]
  [EXPRESION ::= EXPRESION (*) OR CONDICIONAL_Y , {IDENTIFICADOR FIN_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR COMA SI SINO FIN_SI DESDE FIN_DESDE MIENTRAS FIN_MIENTRAS OR }]
}
transition on OR to state [44]

-------------------
lalr_state [127]: {
  [COMENTARIO ::= INICIO_COMENTARIO CONT_COMENT (*) FIN_COMENTARIO , {EOF IDENTIFICADOR INICIO_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR MODULO_K SI DESDE MIENTRAS }]
}
transition on FIN_COMENTARIO to state [128]

-------------------
lalr_state [128]: {
  [COMENTARIO ::= INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO (*) , {EOF IDENTIFICADOR INICIO_BLOQUE INICIO_COMENTARIO LEER DESPLEGAR DECLARAR MODULO_K SI DESDE MIENTRAS }]
}

-------------------
lalr_state [129]: {
  [PROGRAMA ::= PROGRAMA_K IDENTIFICADOR BLOQUE MODULO (*) , {EOF }]
}

-------------------
lalr_state [130]: {
  [MODULO ::= MODULO_K (*) IDENTIFICADOR RECIBE ARGUMENTOS DEVUELVE TIPO BLOQUE , {EOF }]
}
transition on IDENTIFICADOR to state [131]

-------------------
lalr_state [131]: {
  [MODULO ::= MODULO_K IDENTIFICADOR (*) RECIBE ARGUMENTOS DEVUELVE TIPO BLOQUE , {EOF }]
}
transition on RECIBE to state [132]

-------------------
lalr_state [132]: {
  [ARGUMENTOS ::= (*) ARGUMENTOS COMA ARGUMENTO , {COMA DEVUELVE }]
  [ARGUMENTOS ::= (*) ARGUMENTO , {COMA DEVUELVE }]
  [MODULO ::= MODULO_K IDENTIFICADOR RECIBE (*) ARGUMENTOS DEVUELVE TIPO BLOQUE , {EOF }]
  [ARGUMENTO ::= (*) IDENTIFICADOR PAR_IZQ TIPO PAR_DER , {COMA DEVUELVE }]
}
transition on ARGUMENTOS to state [135]
transition on ARGUMENTO to state [134]
transition on IDENTIFICADOR to state [133]

-------------------
lalr_state [133]: {
  [ARGUMENTO ::= IDENTIFICADOR (*) PAR_IZQ TIPO PAR_DER , {COMA DEVUELVE }]
}
transition on PAR_IZQ to state [141]

-------------------
lalr_state [134]: {
  [ARGUMENTOS ::= ARGUMENTO (*) , {COMA DEVUELVE }]
}

-------------------
lalr_state [135]: {
  [ARGUMENTOS ::= ARGUMENTOS (*) COMA ARGUMENTO , {COMA DEVUELVE }]
  [MODULO ::= MODULO_K IDENTIFICADOR RECIBE ARGUMENTOS (*) DEVUELVE TIPO BLOQUE , {EOF }]
}
transition on DEVUELVE to state [137]
transition on COMA to state [136]

-------------------
lalr_state [136]: {
  [ARGUMENTO ::= (*) IDENTIFICADOR PAR_IZQ TIPO PAR_DER , {COMA DEVUELVE }]
  [ARGUMENTOS ::= ARGUMENTOS COMA (*) ARGUMENTO , {COMA DEVUELVE }]
}
transition on ARGUMENTO to state [140]
transition on IDENTIFICADOR to state [133]

-------------------
lalr_state [137]: {
  [MODULO ::= MODULO_K IDENTIFICADOR RECIBE ARGUMENTOS DEVUELVE (*) TIPO BLOQUE , {EOF }]
}
transition on TIPO to state [138]

-------------------
lalr_state [138]: {
  [BLOQUE ::= (*) COMENTARIO BLOQUE , {EOF }]
  [MODULO ::= MODULO_K IDENTIFICADOR RECIBE ARGUMENTOS DEVUELVE TIPO (*) BLOQUE , {EOF }]
  [COMENTARIO ::= (*) INICIO_COMENTARIO CONT_COMENT FIN_COMENTARIO , {EOF INICIO_BLOQUE INICIO_COMENTARIO }]
  [BLOQUE ::= (*) INICIO_BLOQUE NT$0 INSTRUCCIONES NT$1 FIN_BLOQUE , {EOF }]
  [BLOQUE ::= (*) COMENTARIO , {EOF }]
}
transition on INICIO_BLOQUE to state [8]
transition on INICIO_COMENTARIO to state [7]
transition on BLOQUE to state [139]
transition on COMENTARIO to state [5]

-------------------
lalr_state [139]: {
  [MODULO ::= MODULO_K IDENTIFICADOR RECIBE ARGUMENTOS DEVUELVE TIPO BLOQUE (*) , {EOF }]
}

-------------------
lalr_state [140]: {
  [ARGUMENTOS ::= ARGUMENTOS COMA ARGUMENTO (*) , {COMA DEVUELVE }]
}

-------------------
lalr_state [141]: {
  [ARGUMENTO ::= IDENTIFICADOR PAR_IZQ (*) TIPO PAR_DER , {COMA DEVUELVE }]
}
transition on TIPO to state [142]

-------------------
lalr_state [142]: {
  [ARGUMENTO ::= IDENTIFICADOR PAR_IZQ TIPO (*) PAR_DER , {COMA DEVUELVE }]
}
transition on PAR_DER to state [143]

-------------------
lalr_state [143]: {
  [ARGUMENTO ::= IDENTIFICADOR PAR_IZQ TIPO PAR_DER (*) , {COMA DEVUELVE }]
}

-------------------
lalr_state [144]: {
  [BLOQUE ::= COMENTARIO BLOQUE (*) , {EOF MODULO_K }]
}

-------------------
------- CUP v0.11b 20140808 (SVN rev 54) Parser Generation Summary -------
  1 error and 8 warnings
  48 terminals, 33 non-terminals, and 72 productions declared, 
  producing 145 unique parse states.
  0 terminals declared but not used.
  0 non-terminals declared but not used.
  0 productions never reduced.
  7 conflicts detected (0 expected).
  No code produced.
---------------------------------------------------- (CUP v0.11b 20140808 (SVN rev 54))
